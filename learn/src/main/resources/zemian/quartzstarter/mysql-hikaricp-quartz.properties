# This config will setup Quartz to use a MySQL database for job data storage. This config is not for clustering use!
# 
# NOTE: Running more than one instance of the same standalone Quartz database config that point to same database scheme
# WILL corrupt your data! If you need more than two instance of scheduler pointing to same database, try the Quartz
# clustering config instead.
# 
# Note: setting up a quartz database schema is a manual process, and you may get 
# a copy of the database schema here:
# http://svn.terracotta.org/fisheye/browse/Quartz/tags/quartz-2.0.2/docs/dbTables
#
# Full detail of Quartz configuration documentation can be found at
# http://www.quartz-scheduler.org/documentation/quartz-2.1.x/configuration
#

# Main Quartz configuration
org.quartz.scheduler.skipUpdateCheck = true
org.quartz.scheduler.instanceName = MysqlHirakiCPScheduler
org.quartz.scheduler.instanceId = NON_CLUSTERED
org.quartz.scheduler.jobFactory.class = org.quartz.simpl.SimpleJobFactory
org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX
org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate
org.quartz.jobStore.dataSource = quartzDataSource
org.quartz.jobStore.tablePrefix = QRTZ_
org.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool
org.quartz.threadPool.threadCount = 5

# JobStore: JDBC jobStoreTX
org.quartz.dataSource.quartzDataSource.driver = com.mysql.jdbc.Driver
org.quartz.dataSource.quartzDataSource.URL = jdbc:mysql://localhost:3306/quartz
org.quartz.dataSource.quartzDataSource.user = quartz
org.quartz.dataSource.quartzDataSource.password = quartz123

# HikariCP DB Conn Pool Settings

# Enable and use all default values
org.quartz.dataSource.quartzDataSource.provider = hikaricp

# Use Quartz integrated DB Conn config values
# NOTE: It's recommended to use the actual pool provider properties instead.
#       See the section below on their documentation to find the equivalent.
# org.quartz.dataSource.quartzDataSource.maxConnections = 10
# org.quartz.dataSource.quartzDataSource.validationQuery = SELECT 1
# # Can't set this yet See https://github.com/quartz-scheduler/quartz/issues/420
# # Workaround is use "idleTimeout" instead
# #org.quartz.dataSource.quartzDataSource.discardIdleConnectionsSeconds = 0
# org.quartz.dataSource.quartzDataSource.idleTimeout = 0


# Custom hikaricp config properties. You can add more based on their docs:
# https://github.com/brettwooldridge/HikariCP#configuration-knobs-baby
org.quartz.dataSource.quartzDataSource.maximumPoolSize = 10
org.quartz.dataSource.quartzDataSource.connectionTestQuery = SELECT 1
org.quartz.dataSource.quartzDataSource.validationTimeout = 5000
org.quartz.dataSource.quartzDataSource.idleTimeout = 0
