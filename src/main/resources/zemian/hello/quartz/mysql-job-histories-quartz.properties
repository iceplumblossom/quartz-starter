# #########################################################################################
#
# This config is similar to mysql-quartz.properties but with extra plugin that records job histories.
#
# THIS CONFIG REQUIRES YOU TO SETUP EXTRA DATABASE TABLE ON TOP OF DEFAULT QUARTZ SCHEMA!!!
# For MySQL database, you may create this table. For other database, you may translate this.
#
# CREATE TABLE qrtz_scheduler_history (
#   host_ip VARCHAR(15) NOT NULL,
#   host_name VARCHAR(256) NOT NULL,
#   scheduler_name VARCHAR(256) NOT NULL,
#   event_type VARCHAR(128) NOT NULL,
#   event_name VARCHAR(128) NOT NULL,
#   event_time TIMESTAMP NOT NULL,
#   info1 VARCHAR(256) NULL,
#   info2 VARCHAR(256) NULL,
#   info3 VARCHAR(256) NULL,
#   info4 VARCHAR(256) NULL,
#   info5 VARCHAR(256) NULL,
#   INDEX(host_ip, host_name, event_type,event_name,event_time)
# );
# #########################################################################################

# Main Quartz configuration
org.quartz.scheduler.skipUpdateCheck = true
org.quartz.scheduler.instanceName = MysqlDatabaseScheduler
org.quartz.scheduler.instanceId = NON_CLUSTERED
org.quartz.scheduler.jobFactory.class = org.quartz.simpl.SimpleJobFactory
org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX
org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate
org.quartz.jobStore.dataSource = quartzDataSource
org.quartz.jobStore.tablePrefix = QRTZ_
org.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool
org.quartz.threadPool.threadCount = 5

# JobStore: JDBC jobStoreTX
org.quartz.dataSource.quartzDataSource.driver = com.mysql.jdbc.Driver
org.quartz.dataSource.quartzDataSource.URL = jdbc:mysql://localhost:3306/quartz
org.quartz.dataSource.quartzDataSource.user = quartz
org.quartz.dataSource.quartzDataSource.password = quartz123
# Recommend threadPool size + 3
org.quartz.dataSource.quartzDataSource.maxConnections = 8

# MySchedule scheduler service parameters (These are not used by quartz itself, but for the webapp only.)
myschedule.schedulerService.autoInit = true
myschedule.schedulerService.autoStart = true
myschedule.schedulerService.waitForJobsToComplete = true

# Jdbc Scheduler History Plugin
org.quartz.plugin.MyJobHistoryPlugin.class = myschedule.quartz.extra.JdbcSchedulerHistoryPlugin
org.quartz.plugin.MyJobHistoryPlugin.insertSql = INSERT INTO qrtz_scheduler_history VALUES(?,?,?,?,?,?,?,?,?,?,?)
org.quartz.plugin.MyJobHistoryPlugin.querySql = SELECT * FROM qrtz_scheduler_history ORDER BY event_time DESC
org.quartz.plugin.MyJobHistoryPlugin.deleteSql = DELETE qrtz_scheduler_history WHERE event_time < ?
org.quartz.plugin.MyJobHistoryPlugin.deleteIntervalInSecs = 604800
org.quartz.plugin.MyJobHistoryPlugin.dataSourceName = quartzDataSource
org.quartz.plugin.MyJobHistoryPlugin.schedulerContextKey = JdbcSchedulerHistoryPlugin.Instance
